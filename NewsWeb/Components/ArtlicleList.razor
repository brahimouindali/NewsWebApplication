@using Microsoft.AspNetCore.Components.Web
@using NewsWeb.Services
@using Data.Access.Library.Model
@using Microsoft.AspNetCore.Components.Routing
@inject ArticleService articleService
@inject RatingService ratingService


<nav class="navbar navbar-expand-lg p-0">
    <ul class="navbar-nav" style="width: 100%;height: 100%">
        <li class="nav-item text-uppercase border-top-right-radius" style="width: 50%;background:@bgColor!important;" @onclick="(() => show(1))">
            <a class="nav-link text-black text-center" style="cursor: pointer">Les plus lus</a>
        </li>
        <li class="nav-item text-uppercase border-top-left-radius" style="width: 50%;background:@bgColor1!important;" @onclick="(() => show(2))">
            <a class="nav-link text-black text-center" style="cursor: pointer">Les plus notés</a>
        </li>
    </ul>
</nav>

@if (!isShow)
{
    <ul class="list-group" id="header1">
        @foreach (var article in articlesPlusLus)
        {
            string link = $"articles/details/{@article.Id}";

            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span class="badge badge-primary badge-pill">@article.PublishedAt.ToString("HH:mm")</span>
                <NavLink class="ml-2" href="@link">
                    <div> @article.Titre</div>
                </NavLink>
            </li>
        }
    </ul>
}
@if (isShow)
{
    <ul class="list-group" id="header2">
        @foreach (var article in articlesPlusNote)
        {
            string link = $"articles/details/{@article.Id}";

            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span class="badge badge-primary badge-pill">@article.PublishedAt.ToString("HH:mm")</span>
                <NavLink class="ml-2" href="@link">
                    <div> @article.Titre</div>
                </NavLink>
            </li>
        }
    </ul>
}


@code {
    List<Article> articlesPlusLus = new List<Article>();
    List<Article> articlesPlusNote = new List<Article>();
    bool isShow = false;

    string style = "#007bff;color:#fff;";
    string style1 = "#87dfd6;";

    string bgColor = "#007bff;color:#fff";
    string bgColor1 = "#87dfd6";

    async Task getArticles()
    {
        articlesPlusLus = articleService.ArticlesPlusLus().ToList();
        articlesPlusNote = articleService.ArticlesPlusNote().ToList();
    }

    void show(int header)
    {
        if (header == 2)
        {
            isShow = true;
            bgColor = style1;
            bgColor1 = style;
        }
        else
        {
            isShow = false;
            bgColor = style;
            bgColor1 = style1;
        }
    }

    protected override async void OnInitialized()
    {
        await getArticles();
    }
}
